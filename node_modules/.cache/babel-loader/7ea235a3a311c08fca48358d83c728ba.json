{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"h1\", null, \"d\");\n}","map":{"version":3,"mappings":";;uBACEA,oBAAU,IAAV,EAAU,IAAV,EAAI,GAAJ","names":["_createElementBlock"],"sourceRoot":"","sources":["/home/rani/Desktop/programmation/web dev/myprojectvuejs/src/views/Orders.vue"],"sourcesContent":["<template>\n  <h1>d</h1>\n</template>\n<script>\nimport \"../Firebase\";\n\nimport {\n  collection,\n  query,\n  getFirestore,\n  onSnapshot,\n} from \"firebase/firestore\";\nconst db = getFirestore();\nconst q = query(collection(db, \"products\"));\nexport default {\n  name: \"OrdersView\",\n  data() {\n    return {};\n  },\n  created() {\n    onSnapshot(q, (querySnapshot) => {\n      this.products = [];\n      querySnapshot.forEach((doc) => {\n        if (doc.data().uid == this.product.uid) {\n          this.products.push({\n            key: doc.id,\n            name: doc.data().name,\n            brand: doc.data().brand,\n            description: doc.data().description,\n            price: doc.data().price,\n            image: doc.data().image,\n            quantity: 1,\n            totalPrice: doc.data().price,\n          });\n        }\n      });\n    });\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}