{"ast":null,"code":"import \"../Firebase\";\nimport { collection, query, getFirestore, onSnapshot } from \"firebase/firestore\";\nconst db = getFirestore();\nconst q = query(collection(db, \"Checkout\"));\nconst auth = query(collection(db, \"users\"));\nexport default {\n  name: \"OrdersView\",\n\n  data() {\n    return {\n      UserData: {\n        name: \"\"\n      },\n      orders: []\n    };\n  },\n\n  created() {\n    onSnapshot(q, querySnapshot => {\n      this.orders = [];\n      querySnapshot.forEach(doc => {\n        this.UserData.name = doc.data().uid;\n        this.orders.push({\n          key: doc.id,\n          name: this.GetUserdata(this.UserData.name),\n          date: doc.data().date,\n          total: doc.data().total,\n          uid: doc.data().uid,\n          cart: doc.data().cart\n        });\n        console.log(this.orders);\n      });\n    });\n  },\n\n  methods: {\n    GetUserdata(uid) {\n      onSnapshot(auth, querySnapshot1 => {\n        querySnapshot1.forEach(doc1 => {\n          if (doc1.data().uid == uid) {\n            return doc1.data().name;\n          }\n        });\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAyBA,OAAO,aAAP;AAEA,SACEA,UADF,EAEEC,KAFF,EAGEC,YAHF,EAIEC,UAJF,QAKO,oBALP;AAMA,MAAMC,EAAC,GAAIF,YAAY,EAAvB;AACA,MAAMG,IAAIJ,KAAK,CAACD,UAAU,CAACI,EAAD,EAAK,UAAL,CAAX,CAAf;AACA,MAAME,IAAG,GAAIL,KAAK,CAACD,UAAU,CAACI,EAAD,EAAK,OAAL,CAAX,CAAlB;AACA,eAAe;EACbG,IAAI,EAAE,YADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRF,IAAI,EAAE;MADE,CADL;MAILG,MAAM,EAAE;IAJH,CAAP;EAMD,CATY;;EAUbC,OAAO,GAAG;IACRR,UAAU,CAACE,CAAD,EAAKO,aAAD,IAAmB;MAC/B,KAAKF,MAAL,GAAc,EAAd;MACAE,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;QAC7B,KAAKL,QAAL,CAAcF,IAAd,GAAqBO,GAAG,CAACN,IAAJ,GAAWO,GAAhC;QAEA,KAAKL,MAAL,CAAYM,IAAZ,CAAiB;UACfC,GAAG,EAAEH,GAAG,CAACI,EADM;UAEfX,IAAI,EAAE,KAAKY,WAAL,CAAiB,KAAKV,QAAL,CAAcF,IAA/B,CAFS;UAGfa,IAAI,EAAEN,GAAG,CAACN,IAAJ,GAAWY,IAHF;UAIfC,KAAK,EAAEP,GAAG,CAACN,IAAJ,GAAWa,KAJH;UAKfN,GAAG,EAAED,GAAG,CAACN,IAAJ,GAAWO,GALD;UAMfO,IAAI,EAAER,GAAG,CAACN,IAAJ,GAAWc;QANF,CAAjB;QAQAC,OAAO,CAACC,GAAR,CAAY,KAAKd,MAAjB;MACD,CAZD;IAaD,CAfS,CAAV;EAgBD,CA3BY;;EA4Bbe,OAAO,EAAE;IACPN,WAAW,CAACJ,GAAD,EAAM;MACfZ,UAAU,CAACG,IAAD,EAAQoB,cAAD,IAAoB;QACnCA,cAAc,CAACb,OAAf,CAAwBc,IAAD,IAAU;UAC/B,IAAIA,IAAI,CAACnB,IAAL,GAAYO,GAAZ,IAAmBA,GAAvB,EAA4B;YAC1B,OAAOY,IAAI,CAACnB,IAAL,GAAYD,IAAnB;UACF;QACD,CAJD;MAKD,CANS,CAAV;IAOD;;EATM;AA5BI,CAAf","names":["collection","query","getFirestore","onSnapshot","db","q","auth","name","data","UserData","orders","created","querySnapshot","forEach","doc","uid","push","key","id","GetUserdata","date","total","cart","console","log","methods","querySnapshot1","doc1"],"sourceRoot":"","sources":["/home/rani/Desktop/programmation/web dev/myprojectvuejs/src/views/Orders.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <br />\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\"></th>\n          <th scope=\"col\">Customer ID</th>\n          <th scope=\"col\">Date</th>\n          <th scope=\"col\">Total Price</th>\n          <th scope=\"col\">Orders</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">1</th>\n          <td>Mark</td>\n          <td>Otto</td>\n          <td>@mdo</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n<script>\nimport \"../Firebase\";\n\nimport {\n  collection,\n  query,\n  getFirestore,\n  onSnapshot,\n} from \"firebase/firestore\";\nconst db = getFirestore();\nconst q = query(collection(db, \"Checkout\"));\nconst auth = query(collection(db, \"users\"));\nexport default {\n  name: \"OrdersView\",\n  data() {\n    return {\n      UserData: {\n        name: \"\",\n      },\n      orders: [],\n    };\n  },\n  created() {\n    onSnapshot(q, (querySnapshot) => {\n      this.orders = [];\n      querySnapshot.forEach((doc) => {\n        this.UserData.name = doc.data().uid;\n\n        this.orders.push({\n          key: doc.id,\n          name: this.GetUserdata(this.UserData.name),\n          date: doc.data().date,\n          total: doc.data().total,\n          uid: doc.data().uid,\n          cart: doc.data().cart,\n        });\n        console.log(this.orders);\n      });\n    });\n  },\n  methods: {\n    GetUserdata(uid) {\n      onSnapshot(auth, (querySnapshot1) => {\n        querySnapshot1.forEach((doc1) => {\n          if (doc1.data().uid == uid) {\n            return doc1.data().name;\n          }\n        });\n      });\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}