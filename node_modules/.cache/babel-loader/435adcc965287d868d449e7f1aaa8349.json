{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-page\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"form\\\"><div class=\\\"login\\\"><div class=\\\"login-header\\\"><h3>LOGIN</h3><p>Please enter your credentials to login.</p></div></div><form class=\\\"login-form\\\"><input type=\\\"text\\\" placeholder=\\\"username\\\"><input type=\\\"password\\\" placeholder=\\\"password\\\"><button>login</button><p class=\\\"message\\\">Not registered? <a href=\\\"#\\\">Create an account</a></p></form></div>\", 1);\n\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;;oBACTC;;uBADFC,oBAeM,KAfN,cAeMC,UAfN","names":["class","_hoisted_2","_createElementBlock","_hoisted_3"],"sourceRoot":"","sources":["/home/rani/Desktop/programmation/web dev/myprojectvuejs/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"login-page\">\n    <div class=\"form\">\n      <div class=\"login\">\n        <div class=\"login-header\">\n          <h3>LOGIN</h3>\n          <p>Please enter your credentials to login.</p>\n        </div>\n      </div>\n      <form class=\"login-form\">\n        <input type=\"text\" placeholder=\"username\" />\n        <input type=\"password\" placeholder=\"password\" />\n        <button>login</button>\n        <p class=\"message\">Not registered? <a href=\"#\">Create an account</a></p>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport \"../Firebase\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nconst auth = getAuth();\nimport router from \"../router\";\nexport default {\n  name: \"LoginView\",\n  data() {\n    return {\n      user: {\n        email: \"\",\n        password: \"\",\n      },\n      messageError: \"\",\n    };\n  },\n  methods: {\n    loginUser() {\n      signInWithEmailAndPassword(auth, this.user.email, this.user.password)\n        .then((dataUser) => {\n          localStorage.setItem(\"uidUser\", dataUser.user.uid);\n          router.push(\"/products\");\n        })\n        .catch(() => {\n          this.messageError = \"invalid email and password\";\n        });\n    },\n  },\n};\n</script>\n\n<style>\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\nheader .header {\n  background-color: #fff;\n  height: 45px;\n}\nheader a img {\n  width: 134px;\n  margin-top: 4px;\n}\n.login-page {\n  width: 360px;\n  padding: 8% 0 0;\n  margin: auto;\n}\n.login-page .form .login {\n  margin-top: -31px;\n  margin-bottom: 26px;\n}\n.form {\n  position: relative;\n  z-index: 1;\n  background: #ffffff;\n  max-width: 360px;\n  margin: 0 auto 100px;\n  padding: 45px;\n  text-align: center;\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\n}\n.form input {\n  font-family: \"Roboto\", sans-serif;\n  outline: 0;\n  background: #f2f2f2;\n  width: 100%;\n  border: 0;\n  margin: 0 0 15px;\n  padding: 15px;\n  box-sizing: border-box;\n  font-size: 14px;\n}\n.form button {\n  font-family: \"Roboto\", sans-serif;\n  text-transform: uppercase;\n  outline: 0;\n  background-color: #328f8a;\n  background-image: linear-gradient(45deg, #328f8a, #08ac4b);\n  width: 100%;\n  border: 0;\n  padding: 15px;\n  color: #ffffff;\n  font-size: 14px;\n  -webkit-transition: all 0.3 ease;\n  transition: all 0.3 ease;\n  cursor: pointer;\n}\n.form .message {\n  margin: 15px 0 0;\n  color: #b3b3b3;\n  font-size: 12px;\n}\n.form .message a {\n  color: #4caf50;\n  text-decoration: none;\n}\n\n.container {\n  position: relative;\n  z-index: 1;\n  max-width: 300px;\n  margin: 0 auto;\n}\n\nbody {\n  background-color: #328f8a;\n  background-image: linear-gradient(45deg, #328f8a, #08ac4b);\n  font-family: \"Roboto\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</style>"]},"metadata":{},"sourceType":"module"}