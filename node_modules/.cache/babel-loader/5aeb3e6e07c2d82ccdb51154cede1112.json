{"ast":null,"code":"import \"../Firebase\";\nimport { collection, query, getFirestore, onSnapshot } from \"firebase/firestore\";\nconst db = getFirestore();\nconst q = query(collection(db, \"Checkout\"));\nexport default {\n  name: \"OrdersView\",\n\n  data() {\n    return {\n      order: {\n        name: \"\",\n        totalprice: 0,\n        date: \"\",\n        products: []\n      },\n      orders: []\n    };\n  },\n\n  created() {\n    onSnapshot(q, querySnapshot => {\n      this.products = [];\n      querySnapshot.forEach(doc => {\n        if (doc.data().uid == this.product.uid) {\n          this.products.push({\n            key: doc.id,\n            name: doc.data().name,\n            brand: doc.data().brand,\n            description: doc.data().description,\n            price: doc.data().price,\n            image: doc.data().image,\n            quantity: 1,\n            totalPrice: doc.data().price\n          });\n        }\n      });\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAyBA,OAAO,aAAP;AAEA,SACEA,UADF,EAEEC,KAFF,EAGEC,YAHF,EAIEC,UAJF,QAKO,oBALP;AAMA,MAAMC,EAAC,GAAIF,YAAY,EAAvB;AACA,MAAMG,IAAIJ,KAAK,CAACD,UAAU,CAACI,EAAD,EAAK,UAAL,CAAX,CAAf;AACA,eAAe;EACbE,IAAI,EAAE,YADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE;QACLF,IAAI,EAAE,EADD;QAELG,UAAU,EAAE,CAFP;QAGLC,IAAI,EAAE,EAHD;QAILC,QAAQ,EAAE;MAJL,CADF;MAOLC,MAAM,EAAE;IAPH,CAAP;EASD,CAZY;;EAabC,OAAO,GAAG;IACRV,UAAU,CAACE,CAAD,EAAKS,aAAD,IAAmB;MAC/B,KAAKH,QAAL,GAAgB,EAAhB;MACAG,aAAa,CAACC,OAAd,CAAuBC,GAAD,IAAS;QAC7B,IAAIA,GAAG,CAACT,IAAJ,GAAWU,GAAX,IAAkB,KAAKC,OAAL,CAAaD,GAAnC,EAAwC;UACtC,KAAKN,QAAL,CAAcQ,IAAd,CAAmB;YACjBC,GAAG,EAAEJ,GAAG,CAACK,EADQ;YAEjBf,IAAI,EAAEU,GAAG,CAACT,IAAJ,GAAWD,IAFA;YAGjBgB,KAAK,EAAEN,GAAG,CAACT,IAAJ,GAAWe,KAHD;YAIjBC,WAAW,EAAEP,GAAG,CAACT,IAAJ,GAAWgB,WAJP;YAKjBC,KAAK,EAAER,GAAG,CAACT,IAAJ,GAAWiB,KALD;YAMjBC,KAAK,EAAET,GAAG,CAACT,IAAJ,GAAWkB,KAND;YAOjBC,QAAQ,EAAE,CAPO;YAQjBC,UAAU,EAAEX,GAAG,CAACT,IAAJ,GAAWiB;UARN,CAAnB;QAUF;MACD,CAbD;IAcD,CAhBS,CAAV;EAiBD;;AA/BY,CAAf","names":["collection","query","getFirestore","onSnapshot","db","q","name","data","order","totalprice","date","products","orders","created","querySnapshot","forEach","doc","uid","product","push","key","id","brand","description","price","image","quantity","totalPrice"],"sourceRoot":"","sources":["/home/rani/Desktop/programmation/web dev/myprojectvuejs/src/views/Orders.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <br />\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\"></th>\n          <th scope=\"col\">Customer ID</th>\n          <th scope=\"col\">Date</th>\n          <th scope=\"col\">Total Price</th>\n          <th scope=\"col\">Orders</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">1</th>\n          <td>Mark</td>\n          <td>Otto</td>\n          <td>@mdo</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n<script>\nimport \"../Firebase\";\n\nimport {\n  collection,\n  query,\n  getFirestore,\n  onSnapshot,\n} from \"firebase/firestore\";\nconst db = getFirestore();\nconst q = query(collection(db, \"Checkout\"));\nexport default {\n  name: \"OrdersView\",\n  data() {\n    return {\n      order: {\n        name: \"\",\n        totalprice: 0,\n        date: \"\",\n        products: [],\n      },\n      orders: [],\n    };\n  },\n  created() {\n    onSnapshot(q, (querySnapshot) => {\n      this.products = [];\n      querySnapshot.forEach((doc) => {\n        if (doc.data().uid == this.product.uid) {\n          this.products.push({\n            key: doc.id,\n            name: doc.data().name,\n            brand: doc.data().brand,\n            description: doc.data().description,\n            price: doc.data().price,\n            image: doc.data().image,\n            quantity: 1,\n            totalPrice: doc.data().price,\n          });\n        }\n      });\n    });\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}